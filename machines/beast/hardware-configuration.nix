# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  nixpkgs.system = "x86_64-linux";

  boot = {
    initrd.availableKernelModules = [
      "xhci_pci"
      "ahci"
      "usbhid"
      "sd_mod"
    ];
    initrd.kernelModules = [
      "dm-cache"
      "dm-cache-default"
      "dm-crypt"
      "dm-mirror"
      "dm-mod"
      "dm-raid"
      "dm-snapshot"
    ];
    kernelModules = [
      "kvm-amd"
    ];
    extraModulePackages = [ ];
  };

  services.lvm.boot.thin.enable = true;

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-uuid/20f60216-a9ad-46c7-bbc5-fd6cc4a17a39";
      fsType = "btrfs";
      options = [ "subvol=@,autodefrag,commit=120,compress=zstd,noatime,space_cache=v2" ];
    };

    "/boot" = {
      device = "/dev/disk/by-uuid/5B2D-4C85";
      fsType = "vfat";
    };
  };

  swapDevices = [ { device = "/swapfile"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0.useDHCP = lib.mkDefault true;

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
